name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: ${{ matrix.target.target }}

    strategy:
      fail-fast: false

      matrix:
        target:
          - target: x86_64-pc-windows-msvc
            os: windows-2022
          - target: aarch64-pc-windows-msvc
            os: windows-2022
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-20.04
          - target: x86_64-unknown-linux-musl
            os: ubuntu-20.04
          - target: aarch64-unknown-linux-musl
            os: ubuntu-20.04
          - target: x86_64-apple-darwin
            os: macos-11
          - target: aarch64-apple-darwin
            os: macos-11

    runs-on: ${{ matrix.target.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Toolchain for aarch64-unknown-linux-gnu
        if: matrix.target.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu
        shell: bash

      - name: Install Toolchain for x86_64-unknown-linux-musl
        if: matrix.target.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt update
          sudo apt install musl-tools
        shell: bash

      - name: Install Toolchain for aarch64-unknown-linux-musl
        if: matrix.target.target == 'aarch64-unknown-linux-musl'
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu musl-tools
        shell: bash

      - name: Cache Rust Build Target
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ matrix.target.target }}-${{ hashFiles('Cargo.lock') }}

      - name: Build
        run: |
          rustup target add ${{ matrix.target.target }}
          cargo build --release --target ${{ matrix.target.target }} -Z unstable-options --out-dir dist
        shell: bash

      - name: Upload Files
        uses: actions/upload-artifact@v3
        with:
          name: mirror-${{ matrix.target.target }}-${{ github.sha }}.zip
          path: |
            dist/mirror
            dist/mirror.exe
